// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Action {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())

  permissions  Permission[] // relasi balik ke Permission
  ModuleAction ModuleAction[]
}

model Module {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())

  permissions  Permission[] // relasi balik ke Permission
  ModuleAction ModuleAction[]
}

model ModuleAction {
  module_id Int
  action_id Int
  module    Module @relation(fields: [module_id], references: [id])
  action    Action @relation(fields: [action_id], references: [id])

  @@id([module_id, action_id])
  @@map("module_actions")
}

model Permission {
  id        Int    @id @default(autoincrement())
  name      String @unique
  module    Module @relation(fields: [module_id], references: [id])
  module_id Int
  action    Action @relation(fields: [action_id], references: [id])
  action_id Int

  roles RolePermission[]

  @@unique([module_id, action_id], name: "module_id_action_id")
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  slug        String           @unique
  createdAt   DateTime         @default(now())
  permissions RolePermission[]
  users       UserRole[]
}

model UserRole {
  user_id Int
  role_id Int
  user    User @relation(fields: [user_id], references: [id])
  role    Role @relation(fields: [role_id], references: [id])

  @@id([user_id, role_id])
  @@map("user_roles")
}

model RolePermission {
  role_id       Int
  permission_id Int
  role          Role       @relation(fields: [role_id], references: [id])
  permission    Permission @relation(fields: [permission_id], references: [id])

  @@id([role_id, permission_id])
  @@map("role_permissions")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  roles     UserRole[]
}
