// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Action {
  id        String   @id @default(uuid()) @db.Char(36)
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())

  permissions  Permission[]
  ModuleAction ModuleAction[]
}

model Module {
  id        String   @id @default(uuid()) @db.Char(36)
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())

  permissions  Permission[]
  ModuleAction ModuleAction[]
}

model ModuleAction {
  module_id String
  action_id String

  module Module @relation(fields: [module_id], references: [id])
  action Action @relation(fields: [action_id], references: [id])

  @@id([module_id, action_id])
  @@map("module_actions")
}


model Permission {
  id        String   @id @default(uuid()) @db.Char(36)
  name      String   @unique
  module_id String
  action_id String

  module Module @relation(fields: [module_id], references: [id])
  action Action @relation(fields: [action_id], references: [id])
  roles  RolePermission[]

  @@unique([module_id, action_id], name: "module_id_action_id")
}

model Role {
  id          String @id @default(uuid()) @db.Char(36)
  name        String @unique
  slug        String @unique
  createdAt   DateTime @default(now())
  permissions RolePermission[]
  users       UserRole[]
}

model UserRole {
  user_id String
  role_id String

  user User @relation(fields: [user_id], references: [id])
  role Role @relation(fields: [role_id], references: [id])

  @@id([user_id, role_id])
  @@map("user_roles")
}

model RolePermission {
  role_id       String
  permission_id String

  role       Role @relation(fields: [role_id], references: [id])
  permission Permission @relation(fields: [permission_id], references: [id])

  @@id([role_id, permission_id])
  @@map("role_permissions")
}

model User {
  id        String @id @default(uuid()) @db.Char(36)
  name      String
  email     String @unique
  password  String
  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
  roles     UserRole[]
}
